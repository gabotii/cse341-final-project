{
  "swagger": "2.0",
  "info": {
    "title": "Swimming Tools API",
    "description": "API for managing swimming tools and clients",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format 'Bearer <token>'"
    }
  },
  "paths": {
    "/api-docs": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api-docs/login": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/github/callback": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "example": "any"
                },
                "clientId": {
                  "example": "any"
                },
                "deliveryDate": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "trackingNumber": {
                  "example": "any"
                },
                "items": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clients/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "company": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "company": {
                  "example": "any"
                },
                "ipaddress": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/swimmingTools/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/swimmingTools/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/orders/": {
      "get": {
        "description": "Retrieve all orders from the database",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successfully retrieved orders",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "MongoDB ObjectId of the order"
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUID of the client"
                  },
                  "toolId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "UUID of the swimming tool"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity of items ordered"
                  },
                  "orderDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the order in YYYY-MM-DD format"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "processing", "shipped", "delivered", "cancelled"],
                    "description": "Current status of the order"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create a new order",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["clientId", "toolId", "quantity", "orderDate"],
              "properties": {
                "clientId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011",
                  "description": "MongoDB ObjectId of the client"
                },
                "toolId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f191e810c19729de860ea",
                  "description": "MongoDB ObjectId of the swimming tool"
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1,
                  "example": 10,
                  "description": "Quantity of items ordered"
                },
                "orderDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-04-07",
                  "description": "Date of the order in YYYY-MM-DD format"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011"
                },
                "clientId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011"
                },
                "toolId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f191e810c19729de860ea"
                },
                "quantity": {
                  "type": "integer",
                  "example": 10
                },
                "orderDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-04-07"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "processing", "shipped", "delivered", "cancelled"],
                  "example": "pending"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., invalid ObjectId format, missing required fields)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "example": "any"
                },
                "toolId": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deliveries/": {
      "get": {
        "description": "Retrieve all deliveries from the database",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{24}$",
                    "description": "MongoDB ObjectId of the delivery"
                  },
                  "orderId": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{24}$",
                    "description": "MongoDB ObjectId of the associated order"
                  },
                  "clientId": {
                    "type": "string",
                    "pattern": "^[0-9a-fA-F]{24}$",
                    "description": "MongoDB ObjectId of the client"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the delivery in YYYY-MM-DD format"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "shipped", "delivered", "cancelled"],
                    "description": "Current status of the delivery"
                  },
                  "trackingNumber": {
                    "type": "string",
                    "description": "Tracking number for the delivery (optional)"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "toolId": {
                          "type": "string",
                          "pattern": "^[0-9a-fA-F]{24}$",
                          "description": "MongoDB ObjectId of the swimming tool"
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Quantity of the item"
                        }
                      }
                    },
                    "description": "List of items in the delivery (optional)"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Create a new delivery",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["orderId", "clientId", "deliveryDate", "status"],
              "properties": {
                "orderId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011",
                  "description": "MongoDB ObjectId of the associated order"
                },
                "clientId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011",
                  "description": "MongoDB ObjectId of the client"
                },
                "deliveryDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-04-07",
                  "description": "Date of the delivery in YYYY-MM-DD format"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "shipped", "delivered", "cancelled"],
                  "example": "pending",
                  "description": "Current status of the delivery"
                },
                "trackingNumber": {
                  "type": "string",
                  "example": "TRK123456789",
                  "description": "Tracking number for the delivery (optional)"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "toolId": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "example": "507f191e810c19729de860ea",
                        "description": "MongoDB ObjectId of the swimming tool"
                      },
                      "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 10,
                        "description": "Quantity of the item"
                      }
                    }
                  },
                  "example": [
                    {
                      "toolId": "507f191e810c19729de860ea",
                      "quantity": 10
                    }
                  ],
                  "description": "List of items in the delivery (optional)"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delivery created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439022"
                },
                "orderId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011"
                },
                "clientId": {
                  "type": "string",
                  "pattern": "^[0-9a-fA-F]{24}$",
                  "example": "507f1f77bcf86cd799439011"
                },
                "deliveryDate": {
                  "type": "string",
                  "format": "date",
                  "example": "2025-04-07"
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "shipped", "delivered", "cancelled"],
                  "example": "pending"
                },
                "trackingNumber": {
                  "type": "string",
                  "example": "TRK123456789"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "toolId": {
                        "type": "string",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "example": "507f191e810c19729de860ea"
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 10
                      }
                    }
                  },
                  "example": [
                    {
                      "toolId": "507f191e810c19729de860ea",
                      "quantity": 10
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input (e.g., invalid ObjectId format, missing required fields)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deliveries/aggregate": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deliveries/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "example": "any"
                },
                "clientId": {
                  "example": "any"
                },
                "deliveryDate": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "trackingNumber": {
                  "example": "any"
                },
                "items": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderId": {
                  "example": "any"
                },
                "clientId": {
                  "example": "any"
                },
                "deliveryDate": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "trackingNumber": {
                  "example": "any"
                },
                "items": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/aggregate": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}